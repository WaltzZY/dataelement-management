<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inspur.dsp.direct.dao.BaseDataElementMapper">
  <resultMap id="BaseResultMap" type="com.inspur.dsp.direct.dbentity.BaseDataElement">
    <!--@mbg.generated-->
    <!--@Table base_data_element-->
    <id column="dataid" jdbcType="VARCHAR" property="dataid" />
    <result column="data_element_id" jdbcType="VARCHAR" property="dataElementId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="definition" jdbcType="LONGVARCHAR" property="definition" />
    <result column="datatype" jdbcType="VARCHAR" property="datatype" />
    <result column="data_format" jdbcType="VARCHAR" property="dataFormat" />
    <result column="value_domain" jdbcType="LONGVARCHAR" property="valueDomain" />
    <result column="source_unit_code" jdbcType="VARCHAR" property="sourceUnitCode" />
    <result column="source_unit_name" jdbcType="VARCHAR" property="sourceUnitName" />
    <result column="publish_date" jdbcType="TIMESTAMP" property="publishDate" />
    <result column="send_date" jdbcType="TIMESTAMP" property="sendDate" />
    <result column="confirm_date" jdbcType="TIMESTAMP" property="confirmDate" />
    <result column="collectunitqty" jdbcType="INTEGER" property="collectunitqty" />
    <result column="generatedatetime" jdbcType="TIMESTAMP" property="generatedatetime" />
    <result column="remarks" jdbcType="LONGVARCHAR" property="remarks" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_account" jdbcType="VARCHAR" property="createAccount" />
    <result column="last_modify_date" jdbcType="TIMESTAMP" property="lastModifyDate" />
    <result column="last_modify_account" jdbcType="VARCHAR" property="lastModifyAccount" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    dataid, data_element_id, `status`, `name`, `definition`, datatype, data_format, value_domain,
    source_unit_code, source_unit_name, publish_date, send_date, confirm_date, collectunitqty,
    generatedatetime, remarks, create_date, create_account, last_modify_date, last_modify_account
  </sql>

    <resultMap id="DataElementPageInfoVoResultMap" type="com.inspur.dsp.direct.entity.vo.DataElementPageInfoVo">
        <result column="dataid" property="dataid" />
        <result column="name" property="name" />
        <result column="definition" property="definition" />
        <result column="sendDate" property="sendDate" />
        <result column="generatedatetime" property="generatedatetime" />
        <result column="collectDeptName" property="collectDeptName" />
        <result column="confirm_date" property="confirmDate" />
        <result column="sourceUnitCode" property="sourceUnitCode" />
        <result column="sourceUnitName" property="sourceUnitName" />
        <result column="status" property="status" />
    </resultMap>
    <select id="getDataElementPage" resultMap="DataElementPageInfoVoResultMap">
        select
        bde.dataid as dataid,
        bde.name as name,
        bde.definition as definition,
        bde.send_date as sendDate,
        bde.confirm_date as confirm_date,
        bde.generatedatetime as generatedatetime,
        dde.source_unit_name as collectDeptName,
        bde.source_unit_code as sourceUnitCode,
        bde.source_unit_name as sourceUnitName,
        bde.status as status
        from base_data_element bde
        left join domain_data_element dde on bde.dataid = dde.base_dataelement_dataid
        <where>
            bde.collectunitqty = 1
            <if test="dto.collectUnitCodeList != null and dto.collectUnitCodeList.size() != 0">
                and dde.source_unit_code in
                <foreach close=")" collection="dto.collectUnitCodeList" item="item" open="(" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="dto.statusList != null and dto.statusList.size() != 0">
                and bde.status in
                <foreach close=")" collection="dto.statusList" item="item" open="(" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="dto.keyword != null and dto.keyword != ''">
                and (bde.name like concat('%', #{dto.keyword}, '%')
                or bde.definition like concat('%', #{dto.keyword}, '%')
                or bde.source_unit_name like concat('%', #{dto.keyword}, '%')
                or dde.source_unit_name like concat('%', #{dto.keyword}, '%')
                )
            </if>
            <if test="dto.sendDateBegin != null and dto.sendDateEnd != null">
                and bde.send_date between #{dto.sendDateBegin} and #{dto.sendDateEnd}
            </if>
            <if test="dto.confirmDateBegin != null and dto.confirmDateEnd != null">
                and bde.confirm_date between #{dto.confirmDateBegin} and #{dto.confirmDateEnd}
            </if>
            <if test="dto.generatedatetimeBegin != null and dto.generatedatetimeEnd != null">
                and bde.generatedatetime between #{dto.generatedatetimeBegin} and #{dto.generatedatetimeEnd}
            </if>
        </where>
        <if test="sortSql != null and sortSql != ''">
            order by ${sortSql}
        </if>
    </select>

    <resultMap id="GetCollectDataVoResultMap" type="com.inspur.dsp.direct.entity.vo.GetCollectDataVo">
        <result column="dataElementId" property="dataElementId" />
        <result column="dataid" property="dataid" />
        <result column="datatype" property="datatype" />
        <result column="definition" property="definition" />
        <result column="processingDate" property="processingDate" />
        <result column="name" property="name" />
        <result column="receiveTime" property="receiveTime" />
        <result column="status" property="status" />
    </resultMap>
    <select id="getCollectData" resultMap="GetCollectDataVoResultMap">
        select bde.data_element_id as dataElementId,
        bde.dataid as dataid,
        bde.datatype as datatype,
        bde.definition as definition,
        bde.send_date as receiveTime,
        bde.name as name,
        ct.status as status,
        ct.processing_date as processingDate
        from base_data_element bde
        left join confirmation_task ct on bde.dataid = ct.base_dataelement_dataid
        where ct.processing_unit_code = #{organCode,jdbcType=VARCHAR}
        <if test="dto.auditStatus == 'pending'">
            and ct.status = 'pending'
        </if>
        <if test="dto.auditStatus == 'processed'">
            and ct.status in ('confirmed','rejected')
        </if>
        <if test="dto.sendDateBegin != null and dto.sendDateEnd != null">
            and bde.send_date between #{dto.sendDateBegin} and #{dto.sendDateEnd}
        </if>
        <if test="dto.processDateBegin != null and dto.processDateEnd != null">
            and ct.processing_date between #{dto.processDateBegin} and #{dto.processDateEnd}
        </if>
        <if test="dto.statusList != null and dto.statusList.size() != 0">
            and ct.status in
            <foreach close=")" collection="dto.statusList" item="item" open="(" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="dto.keyword != null and dto.keyword != ''">
            and (bde.name like concat('%', #{dto.keyword}, '%')
            or bde.definition like concat('%', #{dto.keyword}, '%'))
        </if>
        <if test="sortSql != null and sortSql != ''">
            order by ${sortSql}
        </if>
    </select>

    <!-- 分页查询待核定基准数据元列表 -->
    <resultMap id="GetPendingApprovalPageVoResultMap" type="com.inspur.dsp.direct.entity.vo.GetPendingApprovalPageVo">
        <result column="dataid" property="dataid" />
        <result column="name" property="name" />
        <result column="definition" property="definition" />
        <result column="status" property="status" />
        <result column="paUnitCode" property="paUnitCode" />
        <result column="paUnitName" property="paUnitName" />
        <result column="sendDate" property="sendDate" />
    </resultMap>
    <select id="selectPaPage" resultMap="GetPendingApprovalPageVoResultMap">
        SELECT
        bdl.dataid,
        bdl.name,
        bdl.definition,
        bdl.status,
        ct.processing_unit_code AS paUnitCode,
        ct.processing_unit_name AS paUnitName,
        bdl.send_date AS sendDate
        FROM base_data_element bdl
        LEFT JOIN confirmation_task ct ON bdl.dataid = ct.base_dataelement_dataid
        AND (ct.status in ('claimed', 'confirmed'))
        WHERE bdl.status = 'pending_approval'
        <if test="dto.sendDateBegin != null">
            AND bdl.send_date &gt;= #{dto.sendDateBegin}
        </if>
        <if test="dto.sendDateEnd != null">
            AND bdl.send_date &lt;= #{dto.sendDateEnd}
        </if>
        <if test="dto.keyword != null and dto.keyword != ''">
            AND (bdl.name LIKE CONCAT('%', #{dto.keyword}, '%')
            OR bdl.definition LIKE CONCAT('%', #{dto.keyword}, '%')
            OR ct.processing_unit_name LIKE CONCAT('%', #{dto.keyword}, '%'))
        </if>
        <if test="dto.sortField != null and dto.sortField != '' and dto.sortOrder != null and dto.sortOrder != ''">
            ORDER BY ${sortSql}
        </if>
        <if test="dto.sortField == null or dto.sortField == ''">
            ORDER BY ct.processing_date DESC
        </if>
    </select>

    <!-- 分页查询已定源基准数据元列表 -->
    <select id="selectConfirmedPage" resultType="com.inspur.dsp.direct.entity.vo.GetPendingApprovalPageVo">
        SELECT
        bdl.dataid,
        bdl.name,
        bdl.definition,
        bdl.status,
        bdl.source_unit_code AS sourceUnitCode,
        bdl.source_unit_name AS sourceUnitName,
        bdl.source_unit_code AS paUnitCode,
        bdl.source_unit_name AS paUnitName,
        bdl.send_date AS sendDate,
        bdl.confirm_date AS confirmDate,
        bdl.collectunitqty,
        GROUP_CONCAT(DISTINCT dde.source_unit_name SEPARATOR '|') AS collectUnitName
        FROM base_data_element bdl
        LEFT JOIN domain_data_element dde ON bdl.dataid = dde.base_dataelement_dataid
        WHERE bdl.status = 'designated_source'
        <if test="dto.sendDateBegin != null">
            AND bdl.send_date &gt;= #{dto.sendDateBegin}
        </if>
        <if test="dto.sendDateEnd != null">
            AND bdl.send_date &lt;= #{dto.sendDateEnd}
        </if>
        <if test="dto.confirmDateBegin != null">
            AND bdl.confirm_date &gt;= #{dto.confirmDateBegin}
        </if>
        <if test="dto.confirmDateEnd != null">
            AND bdl.confirm_date &lt;= #{dto.confirmDateEnd}
        </if>
        <if test="dto.collectUnitCodeList != null and dto.collectUnitCodeList.size() &gt; 0">
            AND dde.source_unit_code IN
            <foreach close=")" collection="dto.collectUnitCodeList" item="unitCode" open="(" separator=",">
                #{unitCode}
            </foreach>
        </if>
        <if test="dto.keyword != null and dto.keyword != ''">
            AND (bdl.name LIKE CONCAT('%', #{dto.keyword}, '%')
            OR bdl.definition LIKE CONCAT('%', #{dto.keyword}, '%')
            OR bdl.source_unit_name LIKE CONCAT('%', #{dto.keyword}, '%')
            OR dde.source_unit_name LIKE CONCAT('%', #{dto.keyword}, '%'))
        </if>
        GROUP BY bdl.dataid
        <if test="dto.sortField != null and dto.sortField != '' and dto.sortOrder != null and dto.sortOrder != ''">
            ORDER BY ${sortSql}
        </if>
        <if test="dto.sortField == null or dto.sortField == ''">
            ORDER BY bdl.confirm_date DESC
        </if>
    </select>

    <resultMap id="getDetermineResultListWithOrganiserResultMap" type="com.inspur.dsp.direct.entity.vo.DataElementWithTaskVo">
        <result column="dataid" property="dataid" />
        <result column="name" property="name" />
        <result column="definition" property="definition" />
        <result column="datatype" property="dataType" />
        <result column="send_date" property="sendDate" />
        <result column="confirm_date" property="confirmDate" />
        <result column="source_unit_code" property="sourceUnitCode" />
        <result column="source_unit_name" property="sourceUnitName" />
        <result column="bde_status" property="bdeStatus" />
        <result column="ct_status" property="ctStatus" />
        <result column="processing_date" property="processingDate" />
    </resultMap>


    <select id="getDetermineResultListWithOrganiserTest" parameterType="com.inspur.dsp.direct.entity.dto.BaseDataElementSearchDTO" resultMap="getDetermineResultListWithOrganiserResultMap">
        SELECT * FROM (
        SELECT
        bde.dataid,
        bde.name,
        bde.definition,
        bde.datatype,
        bde.status as bde_status,
        ct.status as ct_status,
        bde.send_date,
        bde.source_unit_code,
        bde.source_unit_name,
        ct.task_id,
        ct.send_date AS recieve_date,
        ct.processing_date
        FROM base_data_element bde LEFT JOIN confirmation_task ct ON bde.dataid = ct.base_dataelement_dataid
        <where>
            <choose>
                <when test="(base.taskStatusList != null and base.taskStatusList.size() &gt; 0) and (base.baseStatusList != null and base.baseStatusList.size() &gt; 0)">
                    <if test="base.taskStatusList.size() &gt; 0">
                        <foreach close=")" collection="base.taskStatusList" item="status" open="(" separator=" OR ">
                            <choose>
                                <when test="status == 'pending'">(ct.status = 'pending')</when>
                                <when test="status == 'pending_source'">(ct.status = 'pending_source')</when>
                                <when test="status == 'confirming'">(ct.status = 'confirming')</when>
                                <when test="status == 'pending_claimed'">(ct.status = 'pending_claimed')</when>
                                <when test="status == 'confirmed'">(bde.status = 'pending_approval' AND ct.status = 'confirmed')</when>
                                <when test="status == 'rejected'">(bde.status = 'pending_negotiation' AND ct.status = 'rejected')</when>
                                <when test="status == 'claimed'">(bde.status IN ('claimed','pending_approval','pending_negotiation') AND ct.status = 'claimed')</when>
                                <when test="status == 'not_claimed'">(bde.status IN ('claimed','pending_approval','pending_negotiation') AND ct.status = 'not_claimed')</when>
                                <!--&amp;lt;otherwise&amp;gt;&amp;lt;/otherwise&amp;gt;-->
                            </choose>
                        </foreach>
                    </if>
                    <if test="base.taskStatusList.size() &gt; 0 and base.baseStatusList.size() &gt; 0">
                        OR
                    </if>
                    <if test="base.baseStatusList.size() &gt; 0">
                        <foreach close=")" collection="base.baseStatusList" item="status" open="(" separator=" OR ">
                            <choose>
                                <when test="status == 'pending_approval'">(bde.status = 'pending_approval')</when>
                                <when test="status == 'pending_negotiation'">(bde.status = 'pending_negotiation')</when>
                                <when test="status == 'confirmed'">(bde.status = 'confirmed')</when>
                                <when test="status == 'designated_source'">(bde.status = 'designated_source')</when>
                                <when test="status == 'negotiating'">(bde.status = 'negotiating')</when>
                                <otherwise>1=1</otherwise>
                            </choose>
                        </foreach>
                    </if>
                    <!--&amp;lt;if test="base.taskStatusList.size() == 0 and base.baseStatusList.size() == 0"&amp;gt;1=0&amp;lt;/if&amp;gt;-->
                </when>
                <when test="base.taskStatusList != null and base.taskStatusList.size() &gt; 0">
                    <foreach close=")" collection="base.taskStatusList" item="status" open="(" separator=" OR ">
                        <choose>
                            <when test="status == 'pending'">(ct.status = 'pending')</when>
                            <when test="status == 'pending_source'">(ct.status = 'pending_source')</when>
                            <when test="status == 'confirming'">(ct.status = 'confirming')</when>
                            <when test="status == 'pending_claimed'">(ct.status = 'pending_claimed')</when>
                            <when test="status == 'confirmed'">(bde.status = 'pending_approval' AND ct.status = 'confirmed')</when>
                            <when test="status == 'rejected'">(bde.status = 'pending_negotiation' AND ct.status = 'rejected')</when>
                            <when test="status == 'claimed'">(bde.status IN ('claimed','pending_approval','pending_negotiation') AND ct.status = 'claimed')</when>
                            <when test="status == 'not_claimed'">(bde.status IN ('claimed','pending_approval','pending_negotiation') AND ct.status = 'not_claimed')</when>
                        </choose>
                    </foreach>
                </when>
                <when test="base.baseStatusList != null and base.baseStatusList.size() &gt; 0">
                    <foreach close=")" collection="base.baseStatusList" item="status" open="(" separator=" OR ">
                        <choose>
                            <when test="status == 'pending_approval'">(bde.status = 'pending_approval')</when>
                            <when test="status == 'pending_negotiation'">(bde.status = 'pending_negotiation')</when>
                            <when test="status == 'confirmed'">(bde.status = 'confirmed')</when>
                            <when test="status == 'designated_source'">(bde.status = 'designated_source')</when>
                            <when test="status == 'negotiating'">(bde.status = 'negotiating')</when>
                            <!--&amp;lt;otherwise&amp;gt;1=0&amp;lt;/otherwise&amp;gt;-->
                        </choose>
                    </foreach>
                </when>
                <otherwise>1=1</otherwise>
            </choose>
            <if test="base.orgCode != null and base.orgCode != ''">
                AND ct.processing_unit_code = #{base.orgCode}
            </if>
            <if test="base.sendDateBegin != null and base.sendDateBegin != '' and base.sendDateEnd != null and base.sendDateEnd != ''">
                AND ct.send_date BETWEEN FROM_UNIXTIME(#{base.sendDateBegin} / 1000,'%Y-%m-%d') AND FROM_UNIXTIME(#{base.sendDateEnd} / 1000, '%Y-%m-%d')
            </if>
            <if test="base.processDateBegin != null and base.processDateBegin != '' and base.processDateEnd != null and base.processDateEnd != ''">
                AND ct.processing_date BETWEEN FROM_UNIXTIME(#{base.processDateBegin} / 1000,'%Y-%m-%d') AND FROM_UNIXTIME(#{base.processDateEnd} / 1000, '%Y-%m-%d')
            </if>
            <if test="base.receiveDateBegin != null and base.receiveDateBegin != '' and base.receiveDateEnd != null and base.receiveDateEnd != ''">
                AND bde.confirm_date BETWEEN FROM_UNIXTIME(#{base.receiveDateBegin} / 1000,'%Y-%m-%d') AND FROM_UNIXTIME(#{base.receiveDateEnd} / 1000, '%Y-%m-%d')
            </if>
            <if test="base.keyword != null and base.keyword != ''">
                AND (bde.name LIKE CONCAT('%', #{base.keyword}, '%') OR bde.definition LIKE CONCAT('%', #{base.keyword}, '%'))
            </if>
        </where>
        ) AS test
    </select>

    <select id="getDetermineResultListWithOrganiser" parameterType="com.inspur.dsp.direct.entity.dto.BaseDataElementSearchDTO" resultMap="getDetermineResultListWithOrganiserResultMap">
        SELECT * FROM (
            SELECT
                bde.dataid,
                bde.name,
                bde.definition,
                bde.datatype,
                bde.status as bde_status,
                ct.status as ct_status,
                bde.send_date,
                DATE_FORMAT(bde.confirm_date, '%Y-%m-%d %H:%i:%s') as confirm_date,
                bde.source_unit_code,
                bde.source_unit_name,
                ct.task_id,
                DATE_FORMAT(ct.processing_date, '%Y-%m-%d %H:%i:%s') AS processing_date
            FROM base_data_element bde LEFT JOIN confirmation_task ct ON bde.dataid = ct.base_dataelement_dataid
        <where>
            <!-- 添加保底条件 -->
            1=1
            <if test="base.statusList != null and base.statusList.size() &gt; 0">
                AND (
                <trim prefixOverrides="OR">
                    <foreach collection="base.statusList" item="status">
                        <choose>
                            <when test="status == 'pending'">OR (ct.status = 'pending')</when>
                            <when test="status == 'pending_claimed'">OR (ct.status = 'pending_claimed')</when>
                            <when test="status == 'confirmed'">OR (bde.status = 'pending_approval' AND ct.status = 'confirmed')</when>
                            <when test="status == 'rejected'">OR (bde.status = 'pending_negotiation' AND ct.status = 'rejected')</when>
                            <when test="status == 'claimed'">OR (bde.status IN ('claimed','pending_approval','pending_negotiation') AND ct.status = 'claimed')</when>
                            <when test="status == 'not_claimed'">OR (bde.status IN ('claimed','pending_approval','pending_negotiation') AND ct.status = 'not_claimed')</when>
                            <when test="status == 'negotiating'">OR (bde.status = 'negotiating')</when>
                            <when test="status == 'designated_source'">OR (bde.status = 'designated_source')</when>
                            <otherwise>OR 1=0</otherwise>
                        </choose>
                    </foreach>
                </trim>
                )
            </if>
            <if test="base.orgCode != null and base.orgCode != ''">
                AND ct.processing_unit_code = #{base.orgCode}
            </if>
            <if test="base.sendDateBegin != null and base.sendDateBegin != '' and base.sendDateEnd != null and base.sendDateEnd != ''">
                AND ct.send_date BETWEEN DATE(FROM_UNIXTIME(#{base.sendDateBegin} / 1000)) AND DATE(FROM_UNIXTIME(#{base.sendDateEnd} / 1000)) + INTERVAL 1 DAY
            </if>
            <if test="base.processDateBegin != null and base.processDateBegin != '' and base.processDateEnd != null and base.processDateEnd != ''">
                AND ct.processing_date BETWEEN DATE(FROM_UNIXTIME(#{base.processDateBegin} / 1000)) AND DATE(FROM_UNIXTIME(#{base.processDateEnd} / 1000)) + INTERVAL 1 DAY
            </if>
            <if test="base.receiveDateBegin != null and base.receiveDateBegin != '' and base.receiveDateEnd != null and base.receiveDateEnd != ''">
                AND bde.confirm_date BETWEEN DATE(FROM_UNIXTIME(#{base.receiveDateBegin} / 1000)) AND
                DATE(FROM_UNIXTIME(#{base.receiveDateEnd} / 1000)) + INTERVAL 1 DAY
            </if>
            <if test="base.keyword != null and base.keyword != ''">
                AND (bde.name LIKE CONCAT('%', #{base.keyword}, '%') OR bde.definition LIKE CONCAT('%', #{base.keyword},
                '%'))
            </if>
        </where>
        <if test="base.sortSql != null and base.sortSql != ''">
            order by ${base.sortSql}
        </if>
        ) AS test
    </select>

    <select id="getElementDetailWithStatus" parameterType="com.inspur.dsp.direct.entity.dto.BaseDataElementSearchDTO" resultMap="getDetermineResultListWithOrganiserResultMap">
        SELECT
            bde.dataid,
            bde.name,
            bde.definition,
            bde.datatype,
            bde.status as bde_status,
            ct.status as ct_status,
            bde.send_date,
            bde.source_unit_code,
            bde.source_unit_name,
            ct.task_id,
            DATE_FORMAT(ct.send_date, '%Y-%m-%d %H:%i:%s') AS recieve_date,
            DATE_FORMAT(ct.processing_date, '%Y-%m-%d %H:%i:%s') AS processing_date
        FROM base_data_element bde LEFT JOIN confirmation_task ct ON bde.dataid = ct.base_dataelement_dataid
        <where>
            <if test="orgCode != null and orgCode != ''">
                AND ct.processing_unit_code = #{orgCode}
            </if>
            <if test="dataid != null and dataid != ''">
                AND bde.dataid = #{dataid}
            </if>
        </where>
        order by ct.processing_date desc limit 1
    </select>


    <!--auto generated by MybatisCodeHelper on 2025-09-23-->
    <select id="selectFirstByName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from base_data_element
        where `name`=#{name,jdbcType=VARCHAR} limit 1
    </select>

    <select id="getDetermineResultList" resultType="com.inspur.dsp.direct.entity.vo.GetDetermineResultVo">
        select
        bde.*,
        GROUP_CONCAT(DISTINCT dde.source_unit_name SEPARATOR '|') as collectUnitName
        from base_data_element bde
        left join domain_data_element dde on bde.dataid = dde.base_dataelement_dataid
        <where>
            `status` = 'designated_source'
            <if test="dto.keyword != null and dto.keyword != ''">
                and (name like concat('%', #{dto.keyword}, '%') or definition like concat('%', #{dto.keyword}, '%'))
            </if>
            <if test="dto.sendDateBegin != null">
                and send_date &gt;= #{dto.sendDateBegin}
            </if>
            <if test="dto.sendDateEnd != null">
                and send_date <![CDATA[<=]]> #{dto.sendDateEnd}
            </if>
            <if test="dto.confirmDateBegin != null">
                and confirm_date &gt;= #{dto.confirmDateBegin}
            </if>
            <if test="dto.confirmDateEnd != null">
                and confirm_date <![CDATA[<=]]> #{dto.confirmDateEnd}
            </if>
            <if test="dto.collectUnitCodeList != null and dto.collectUnitCodeList.size() != 0">
                and source_unit_code in
                <foreach close=")" collection="dto.collectUnitCodeList" index="index" item="item" open="(" separator=",">
                    #{item}
                </foreach>
            </if>
        </where>
        GROUP BY bde.dataid
        <if test="dto.sortSql != null and dto.sortSql != ''">
            order by ${dto.sortSql}
        </if>
    </select>

    <resultMap id="getCollectUnitListResultMap" type="com.inspur.dsp.direct.entity.vo.GetCollectUnitVo">
        <result column="task_id" property="taskId" />
        <result column="status" property="status" />
        <result column="source_unit_code" property="sourceUnitCode" />
        <result column="source_unit_name" property="sourceUnitName" />
        <result column="name" property="name" />
        <result column="processing_date" property="processingDate" />
        <result column="send_date" property="sendDate" />
        <result column="processing_opinion" property="processingOpinion" />
    </resultMap>

    <select id="getCollectUnitList" resultMap="getCollectUnitListResultMap">
        select ct.task_id              AS task_id,
               ct.status               AS status,
               dde.source_unit_code    AS source_unit_code,
               ct.processing_unit_code AS processing_unit_code,
               dde.name                AS name,
               dde.source_unit_name    AS source_unit_name,
               ct.processing_date      AS processing_date,
               ct.send_date            AS send_date,
               ct.processing_opinion   AS processing_opinion
        from domain_data_element dde
                 left join confirmation_task ct on dde.source_unit_code = ct.processing_unit_code
            and dde.base_dataelement_dataid = ct.base_dataelement_dataid
        where dde.base_dataelement_dataid = #{dataId}
    </select>

    <!-- 获取采集方已定源数据元列表（包含所有采集单位） -->
    <select id="getDetermineResultListForCollector" resultType="com.inspur.dsp.direct.entity.vo.GetDetermineResultVo">
        select
        bde.*,
        GROUP_CONCAT(DISTINCT dde.source_unit_name SEPARATOR '|') as collectUnitName
        from base_data_element bde
        left join domain_data_element dde on bde.dataid = dde.base_dataelement_dataid
        <where>
            bde.source_unit_code = #{orgCode} AND bde.status = 'designated_source'
            <if test="dto.keyword != null and dto.keyword != ''">
                and (bde.name like concat('%', #{dto.keyword}, '%') or bde.definition like concat('%', #{dto.keyword}, '%'))
            </if>
            <if test="dto.sendDateBegin != null and dto.sendDateEnd != null">
                and bde.send_date between #{dto.sendDateBegin} and #{dto.sendDateEnd}
            </if>
        </where>
        GROUP BY bde.dataid
        <if test="dto.sortField != null and dto.sortField != '' and dto.sortOrder != null and dto.sortOrder != ''">
            <if test="dto.sortOrder == 'asc'">
                order by bde.${dto.sortField} asc
            </if>
            <if test="dto.sortOrder == 'desc'">
                order by bde.${dto.sortField} desc
            </if>
        </if>
    </select>
</mapper>